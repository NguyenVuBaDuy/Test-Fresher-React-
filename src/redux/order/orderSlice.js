import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { message } from 'antd';

const initialState = {
    carts: []
};



export const orderSlice = createSlice({
    name: 'order',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        doAddBookAction: (state, action) => {
            let carts = state.carts
            const data = action.payload
            let index = carts.findIndex(item => item._id === data._id)
            if (index > -1) {
                carts[index].quantity = carts[index].quantity + +data.quantity
            } else {
                carts = [{
                    quantity: +data.quantity,
                    _id: data._id,
                    detail: data.detail
                }, ...carts]
            }
            message.success('The product has been added to the cart!')
            state.carts = carts
        },
        doUpdateBookAction: (state, action) => {
            let carts = state.carts
            const data = action.payload
            let index = carts.findIndex(item => item._id === data._id)
            if (index > -1) {
                carts[index].quantity = data.quantity !== 'empty' ? +data.quantity : ""
            }
            state.carts = carts
        },
        doDeleteBookAction: (state, action) => {
            let carts = state.carts
            const _id = action.payload
            let newCarts = carts.filter(item => item._id !== _id)
            state.carts = newCarts
        },
        doDeleteAllBookAction: (state) => {
            state.carts = []
        }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {

    },
});

export const { doAddBookAction, doUpdateBookAction, doDeleteBookAction, doDeleteAllBookAction } = orderSlice.actions;


export default orderSlice.reducer;
